name: Test

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug

permissions:
  contents: read
  id-token: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: Add gradlew
        run: chmod +x ./gradlew

      - name: Test
        uses: gradle/gradle-build-action@v2
        with:
          arguments: test

      - name: Build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      - name: Build (jlink)
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jlink

      - name: Build (jpackage)
        uses: gradle/gradle-build-action@v2
        with:
          arguments: jpackage

      - name: Upload jpackage outputs
        uses: actions/upload-artifact@v3
        with:
          name: jpackage-output
          path: |
            build/jpackage/*.msi
            build/jpackage/*.pkg
            build/jpackage/*.deb

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: |
            build/jpackage/*.msi
            build/jpackage/*.pkg
            build/jpackage/*.deb
          asset_name: jpackage-output
          asset_content_type: application/octet-stream
          token: ${{ secrets.GITHUB_TOKEN }}